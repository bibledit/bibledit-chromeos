# Copyright (Â©) 2003-2016 Teus Benschop.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

VALID_TOOLCHAINS := pnacl glibc clang-newlib mac

# NACL_SDK_ROOT ?= $(abspath $(CURDIR)/../..)

# pnacl, clang-newlib, glibc, host
TOOLCHAIN = pnacl

# CONFIG = Debug
CONFIG = Release

TARGET = bibledit

include $(NACL_SDK_ROOT)/tools/common.mk

# CHROME_ARGS += --allow-nacl-socket-api=localhost

LIBS = nacl_io ppapi_cpp ppapi pthread

CFLAGS = -Wall -I.
CXXFLAGS = -Wall -std=gnu++11 -I.
LDFLAGS = -std=gnu++11 --pnacl-exceptions=sjlj
SOURCES = bibledit.cpp \
# BIBLEDIT_SOURCES

# Build rules generated by macros from common.mk:

$(foreach src,$(SOURCES),$(eval $(call COMPILE_RULE,$(src),$(CFLAGS))))

# The PNaCl workflow uses both an unstripped and finalized/stripped binary.
# On NaCl, only produce a stripped binary for Release configs (not Debug).
ifneq (,$(or $(findstring pnacl,$(TOOLCHAIN)),$(findstring Release,$(CONFIG))))
$(eval $(call LINK_RULE,$(TARGET)_unstripped,$(SOURCES),$(LIBS),$(DEPS)))
$(eval $(call STRIP_RULE,$(TARGET),$(TARGET)_unstripped))
else
$(eval $(call LINK_RULE,$(TARGET),$(SOURCES),$(LIBS),$(DEPS)))
endif

$(eval $(call NMF_RULE,$(TARGET),))
